{"version":3,"sources":["components/Navbar/Navbar.js","components/Landing/Landing.js","components/Signup/Signup.js","components/Login/Login.js","config/routes.js","App.js","serviceWorker.js","index.js"],"names":["Navig","props","state","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","Brand","this","isLogin","to","onClick","handleLogout","React","Component","Landing","Signup","username","email","password","handleChange","event","setState","target","name","value","console","log","handleSubmit","preventDefault","axios","post","process","then","res","data","jwt","setCurrentUser","catch","err","response","Container","Row","Col","Form","onSubmit","Group","controlId","Control","type","placeholder","onChange","Text","Button","variant","Login","exact","path","component","render","App","localStorage","setItem","handletest","get","getItem","removeItem","bind","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.fb9b9926.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav, Navbar, Form, NavDropdown, FormControl, Button } from 'react-bootstrap';\nimport { NavLink, Link } from 'react-router-dom';\n\nclass Navig extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n\n    }\n  }\n  render(){\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        \n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#home\">Explore</Nav.Link>\n            <Nav.Link href=\"#link\">Start a project</Nav.Link>\n          </Nav>\n          <Navbar.Brand href=\"#home\" className=\"ml-auto mr-auto\">Startkicker</Navbar.Brand>\n          <Nav className=\"ml-auto\">\n          {/* <Form inline className=\"mr-sm-2\">\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form> */}\n          { this.props.isLogin ?  <><NavLink className=\"nav-link\" to='/profile'>Profile</NavLink>\n          <NavLink className=\"nav-link\" to='/' onClick={this.props.handleLogout}>Logout</NavLink></> : <><NavLink className=\"nav-link\" to='/login'>Login</NavLink>\n          <NavLink className=\"nav-link\" to='/signup'>Signup</NavLink></>}\n          \n         \n          \n          </Nav>\n          \n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n  \n}\n\nexport default Navig;","import React from 'react';\n\nconst Landing = props => {\n  return(\n    <h1>Landing is here</h1>\n  )\n}\n\nexport default Landing;","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass Signup extends React.Component {\n  state = {\n    username: '',\n    email: '',\n    password: ''\n  }\n\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n    console.log('username',this.state.username)\n    console.log('email',this.state.email)\n    console.log('password',this.state.password)\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log('hiiii')\n    console.log('bodytosend',this.state);\n    axios.post(`${process.env.REACT_APP_API_URL}/auth/signup`, this.state)\n      .then(res => {\n        console.log(res.data.jwt)\n        let jwt = res.data.jwt\n        this.props.setCurrentUser(jwt);\n      })\n      .catch(err => {\n        console.log(err.response)\n      })\n  }\n\n  render(){\n    return (\n      <>\n     \n        <Container className=\"mt-5 pt-5\">\n          <Row>\n            <Col></Col>\n            <Col className=\"text-center\">\n              <h3 className=\"p-2\">Signup</h3>\n              <Form className=\"text-left\" onSubmit={this.handleSubmit}>\n              <Form.Group controlId=\"formBasicUsername\">\n                  <Form.Control type=\"text\" name=\"username\" placeholder=\"Enter username\" onChange={this.handleChange}/>\n                  <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                  </Form.Text>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={this.handleChange}/>\n                  <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                  </Form.Text>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.handleChange}/>\n                </Form.Group>\n                <Button className=\"\" variant=\"primary\" type=\"submit\" >\n                  Submit\n                </Button>\n              </Form></Col>\n            <Col></Col>\n  \n          </Row>\n        </Container>\n      </>\n    )\n  }\n}\n\n\nexport default Signup;","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\n\nclass Login extends React.Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n    console.log(this.state.email)\n    console.log(this.state.password)\n  }\n\n  handleSubmit = () => {\n    axios.post()\n  }\n\n\n\n  render(){\n    return (\n      <>\n     \n        <Container className=\"mt-5 pt-5\">\n          <Row>\n            <Col></Col>\n            <Col className=\"text-center\">\n              <h3 className=\"p-2\">Login</h3>\n              <Form className=\"text-left\">\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={this.handleChange}/>\n                  <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                  </Form.Text>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.handleChange}/>\n                </Form.Group>\n                <Button className=\"\" variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </Form></Col>\n            <Col></Col>\n  \n          </Row>\n        </Container>\n      </>\n    )\n  }\n  \n}\n\n\nexport default Login;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Landing from '../components/Landing/Landing'\nimport Signup from '../components/Signup/Signup';\nimport Login from '../components/Login/Login';\n\nexport default ({ isLogin, setCurrentUser }) => (\n  <Switch>\n    <Route exact path='/' component={Landing} />\n    <Route path='/signup' render={() => (<Signup isLogin={isLogin} setCurrentUser={setCurrentUser}/>)} />\n    <Route\n      path='/login' render={() => (<Login isLogin={isLogin} setCurrentUser={setCurrentUser}/>)}\n    />\n  </Switch>\n);\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Naviga from './components/Navbar/Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Routes from './config/routes';\nimport {Caontainer, Row, Col } from 'react-bootstrap';\n\n\nclass App extends Component {\n  state = {\n    isLogin: false\n  }\n\n  componentDidMount (){\n    this.setCurrentUser(localStorage.getItem('jwt'))\n  }\n  \n  setCurrentUser = jwt => {\n    console.log('get jwt and set user');\n    if (jwt) {\n      this.setState({\n        isLogin: true\n      })\n      localStorage.setItem('jwt', jwt);\n    }\n  }\n  handleLogout (){\n    localStorage.removeItem('jwt');\n    this.setState({\n      isLogin: false\n    })\n\n  }\n  handletest= event => {\n    event.preventDefault();\n    axios.get(`${process.env.REACT_APP_URL}/`)\n    .then(res => {\n      console.log(res.data);\n    })\n    .catch(err => {\n      console.log(err.response)\n    })\n  }\n \nrender(){\n\n  return (\n    <>\n      <Naviga isLogin={this.state.isLogin} setCurrentUser={this.setCurrentUser} handleLogout={this.handleLogout.bind(this)}/>\n      <Routes isLogin={this.state.isLogin} setCurrentUser={this.setCurrentUser} handleLogout={this.handleLogout}/>\n        <button onClick={this.handletest}>get req</button>\n        \n    </>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n<App />\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}